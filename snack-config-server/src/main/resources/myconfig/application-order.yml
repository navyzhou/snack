spring:
   profiles:
      active: dev-6655

---
server:
   port: 6655

spring:
   profiles: dev-6655
   application:
      name: order-server

   datasource:
      driverClassName: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/snack_order?useSSL=false&useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8
      type: com.alibaba.druid.pool.DruidDataSource
      username: root
      password: a
   http:
      encoding:
         charset: utf-8
         force: true
         enabled: true
   session:
      # 将session信息存到redis中
      store-type: redis
  
   redis:
      database: 0
      host: 192.168.99.100
      prot: 6379
      password:
      timeout: 5000
      jedis:
         pool:
            max-active: 8
            
   # 邮件发送的配置
   mail:
      protocol: smtp
      username: 1293580602@qq.com
      password: dihpepdwtahlgefh
      port: 465
      host: smtp.qq.com
      properties:
         mail:
            smtp:
               auth: true
               timeout: 2500
               ssl:
                  enable: true
                  
   cloud:
      stream:
         bindings:
            # 要进行分组的这个消息队列的名称
            myMessage:
               # 分组名，这个我们可以随便自己取
               group: order
               # 执行传输对象的格式，不然默认会序列化对象，这样如果出错，导致消息积压，不便于调式
               content-type: application/json
                
   rabbitmq:
      host: 192.168.99.100
      port: 5672
      username: guest
      password: guest

mybatis:
   # mapper映射文件所在的路径
   mapper-locations: mapper/*Mapper.xml
   # 需要启动别名的类所在的包
   type-aliases-package: com.yc.snack.order.bean, com.yc.snack.order.dto

# hystrix超时配置
hystrix:
   command:
      # 默认超时时间为2秒，不配置的话，默认是1秒
      default:
         execution:
            isolation:
               thread:
                  timeoutInMilliseconds: 3000
      # 指定方法的超时时间，这个值为要指定的降级的这个方法的方法名
      list:
         execution:
            isolation:
               thread:
                  timeoutInMilliseconds: 2000
feign:
   hystrix:
      enabled: true

eureka:
   client:
      service-url:
         defaultZone: http://navy:123321@127.0.0.1:6611/eureka

logging:
   level:
      # com.yc.snack.order.mapper: debug
      # root: debug
      org.springframework.cloud.netflix.feign: debug